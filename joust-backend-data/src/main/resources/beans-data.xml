<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">


  <bean class="java.net.URI" id="dbUrl">
    <constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
  </bean>

  <bean id='dbUrlQuery' class="com.joust.backend.data.spring.QueryStringFactoryBean" p:databaseUri-ref="dbUrl" />

  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="driverClass" value='org.postgresql.Driver' />
    <property name="jdbcUrl"
      value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() + @dbUrlQuery  }" />
    <property name="user" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
    <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
  </bean>

  <bean id='flyway.clean' class="org.flywaydb.core.Flyway" init-method="clean">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id='flyway.migrate' class="org.flywaydb.core.Flyway" init-method="migrate" depends-on="flyway.clean">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id='sqlFiles' class="com.joust.backend.data.spring.FilesAsStringFactoryBean" />



  <bean id='userProfileStore' class="com.joust.backend.data.spring.JdbcUserProfileStore" depends-on="flyway.migrate">
    <constructor-arg ref="dataSource" />
    <property name="mergeUserProfileSql" value="#{sqlFiles['MergeUserProfile.sql']}" />
    <property name="getUserProfileByExternalSourceSql" value="#{sqlFiles['GetUserProfileByExternalSource.sql']}" />
    <property name="getUserProfileSql" value="#{sqlFiles['GetUserProfile.sql']}" />
    <property name="saveExternalProfileSourceSql" value="#{sqlFiles['SaveExternalProfileSource.sql']}" />
    <property name="rowMapper">
      <bean class="com.joust.backend.data.spring.UserProfileRowMapper" />
    </property>
  </bean>


</beans>